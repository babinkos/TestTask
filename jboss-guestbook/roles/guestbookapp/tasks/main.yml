---
# tasks file for guestbookapp

- name: Check that the gb xml file exists or not
  become: yes
  stat:
    path: "{{ gb_dirname + '/' + gb_configfile }}"
  register: xmlfilestate
 
- debug:
    msg: "filepath {{ gb_dirname + '/' + gb_configfile }} state exists {{ xmlfilestate.stat.exists }}"

#deployment
#1. cp target/example.war $AS/standalone/deployments
#2. (Manual mode only) touch $AS/standalone/deployments/example.war.dodeploy

- name: Download app zip and Unarchive
  become: yes
  become_method: sudo
  become_user: "{{ jboss_svc_username }}"  
  unarchive:
    src: "/tmp/{{ app_zipfile }}"
# uncomment src and remote_src after tests
#    src: "{{ application_repo }}"
    dest: "{{ gb_dirname }}"
    creates: "{{ gb_dirname + '/' + gb_configfile }}"
#    remote_src: yes
  when: xmlfilestate.stat.exists == False

- name: fixing owner for app folder (owner was root)
  become: yes
  file:
    path: "{{ gb_dirname }}"
    recurse: yes
    owner: "{{ jboss_svc_username }}"
    group: "{{ jboss_svc_username }}"
    mode: 0755
  
- name: Check that the gb xml file finally exists
  become: yes
  stat:
    path: "{{ gb_dirname + '/' + gb_configfile }}"
  register: xmlfilestate
 
- debug:
    msg: "filepath {{ gb_dirname + '/' + gb_configfile }} state exists {{ xmlfilestate.stat.exists }}"
  
- name: Remove <elastic-load-balancer> section
  become: yes
  xml:
    path: "{{ gb_dirname + '/' + gb_configfile }}"
    xpath: /cumulogic-app/services/@elastic-load-balancer
    state: absent
  when: xmlfilestate.stat.exists == True 
  
- name: Check that the app war file exists
  become: yes
  stat:
    path: "{{ gb_dirname + '/' + gb_warfile }}"
  register: warfilestate

- debug:
    msg: "filepath {{ gb_dirname + '/' + gb_warfile }} state finally exists {{ warfilestate.stat.exists }}"

- name: Deploy war app in jboss/wildfly
  become: yes
  become_method: sudo
  become_user: "{{ jboss_svc_username }}"
  file:
    path: "{{ gb_dirname + '/' + gb_warfile + '.dodeploy' }}"
    state: touch
  when: warfilestate.stat.exists == True 
  
#- name: Check wildfly app is running or not vs HTTPS 
#  uri:
#    url: https://localhost:8443
#    return_content: yes
#    validate_certs: False
#  register: httpspwebpage
#
#- name: Fail if jboss.org is not in the page content
#  fail:
#  when: "'.jboss.org' not in httpswebpage.content" 
   