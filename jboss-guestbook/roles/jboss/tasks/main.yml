---
# tasks file for jboss
- debug:
    msg: "System {{ inventory_hostname }} has OS type: {{ ansible_distribution }}"

- name: install openjdk, unzip
  become: yes
  apt:
    name: "{{ item }}"
    state: latest
  with_items:
    - 'openjdk-8-jdk'
    - 'unzip'
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- name: Check that the jboss directory already exists
  become: yes
  stat:
    path: "{{ jboss_rootdir }}"
  register: dirstate

- debug:
    msg: "filepath {{ jboss_rootdir }} state exists {{ dirstate.stat.exists }}"

- name: Check that the jboss jar file already exists
  become: yes
  stat:
    path: "{{ jboss_rootdir + '/' + jboss_jarfile }}"
  register: jarstate

- debug:
    msg: "filepath {{ jboss_rootdir + '/' + jboss_jarfile }} state exists {{ jarstate.stat.exists }}"

- name: Create subdir for jboss app if not exists
  become: yes
  file:
    path: "{{ jboss_rootdir }}"
    state: directory
    mode: 0755
  when: dirstate.stat.exists == False

- name: Check that the jboss directory exists or not
  become: yes
  stat:
    path: "{{ jboss_rootdir }}"
  register: dirstate

- debug:
    msg: "filepath {{ jboss_rootdir }} state exists {{ dirstate.stat.exists }}"
  
- name: Download app zip and Unarchive
  become: yes
  unarchive:
    src: "{{ jboss_repo }}"
    dest: "{{ jboss_unzip_dirname }}"
    creates: "{{ jboss_rootdir + '/' + jboss_jarfile }}"
    remote_src: yes
  when: jarstate.stat.exists == False and  dirstate.stat.exists == True

- debug:
    msg: "clause to download zip was  when:{{ jarstate.stat.exists == False and  dirstate.stat.exists == True }}"

- name: Check that the jboss jar file exists or not
  become: yes
  stat:
    path: "{{ jboss_rootdir + '/' + jboss_jarfile }}"
  register: jarstate
 
- debug:
    msg: "filepath {{ jboss_rootdir + '/' + jboss_jarfile }} state exists {{ jarstate.stat.exists }}"
 
- name: add OS user for jboss service
  become: yes
  user:
    name: "{{ jboss_svc_username }}"
    
- name: set owner for jboss folder
  become: yes
  file:
    path: "{{ jboss_rootdir }}"
    recurse: yes
    owner: "{{ jboss_svc_username }}"
    group: "{{ jboss_svc_username }}"
#    mode: 754

- name: add jboss users
  become: yes
  become_method: su
  become_user: "{{ jboss_svc_username }}"
  command: "{{ item }}"
  with_items:
    - "cd {{ jboss_bindir }}"
    - "ls -l"
    - "./add-user.sh {{ jboss_mgmt_username }} {{ jboss_mgmt_pass }}" 
    - "./add-user.sh -a {{ jboss_app_username }} {{ jboss_app_pass }}"

- debug:
    msg: "command from previous task: ./add-user.sh {{ jboss_mgmt_username }} {{ jboss_mgmt_pass }}"   