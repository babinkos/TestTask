---
# tasks file for jboss
- debug:
    msg: "System {{ inventory_hostname }} has OS type: {{ ansible_distribution }}"

- name: install openjdk, unzip
  become: yes
  apt:
    name: "{{ item }}"
    state: latest
  with_items:
    - 'openjdk-8-jdk'
    - 'unzip'
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- name: Check that the java app directory already exists
  become: yes
  stat:
    path: "{{ jboss_dirname }}"
  register: dirstate

- debug:
    msg: "filepath {{ jboss_dirname }} state exists {{ dirstate.stat.exists }}"

- name: Check that the java app config file already exists
  become: yes
  stat:
    path: "{{ jboss_dirname + '/' + jboss_configfile }}"
  register: conffilestate

- debug:
    msg: "filepath {{ jboss_dirname + '/' + jboss_configfile }} state exists {{ conffilestate.stat.exists }}"

- name: Create subdir for jboss app if not exists
  become: yes
  file:
    path: "{{ jboss_dirname }}"
    state: directory
    mode: 0755
  when: dirstate.stat.exists == False

- name: Check that the java app directory exists or not
  become: yes
  stat:
    path: "{{ jboss_dirname }}"
  register: dirstate

- debug:
    msg: "filepath {{ jboss_dirname }} state exists {{ dirstate.stat.exists }}"
  
- name: Download app zip and Unarchive
  become: yes
  unarchive:
    src: "{{ jboss_repo }}"
    dest: "{{ jboss_dirname }}"
    creates: "{{ jboss_dirname + '/' + jboss_configfile }}"
    remote_src: yes
  when: conffilestate.stat.exists == False and  dirstate.stat.exists == True

- name: Check that the java app config file exists or not
  become: yes
  stat:
    path: "{{ jboss_dirname + '/' + jboss_configfile }}"
  register: filestate
 
- debug:
    msg: "filepath {{ jboss_dirname + '/' + jboss_configfile }} state exists {{ filestate.stat.exists }}"
 
- name: Remove <elastic-load-balancer> section
  become: yes
  xml:
    path: "{{ jboss_dirname + '/' + jboss_configfile }}"
    xpath: /cumulogic-app/services/@elastic-load-balancer
    state: absent
  when: filestate.stat.exists == True 
    